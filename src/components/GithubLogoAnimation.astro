<div class="github-logo-wrapper">
    <div class="card-container">
        <div class="card">
            <div class="glow-effect"></div>
            <div class="logo-container">
                <svg class="github-logo" width="120" height="120" viewBox="0 0 24 24" fill="none">
                    <path class="github-path" d="M12 0C5.374 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.237 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z" 
                          stroke="#00ffc8" 
                          stroke-width="0.8" 
                          fill="none"
                          stroke-dasharray="200"
                          stroke-dashoffset="200"/>
                </svg>
            </div>
        </div>
    </div>
</div>

<style>
    .github-logo-wrapper {
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #1a3b47, #2c5a6b);
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 7px 7px 0px 0px;
    }

    .card-container {
        perspective: 1000px;
        width: 70%;
    }

    .card {
        width: 100%;
        height: 160px;
        background: linear-gradient(135deg, #4a7c8a, #6ba0b0);
        border-radius: 7px;
        position: relative;
        transform: rotateX(10deg) rotateY(-5deg);
        box-shadow: 
            0 20px 40px rgba(0, 0, 0, 0.3),
            0 0 0 1px rgba(255, 255, 255, 0.1),
            inset 0 1px 0 rgba(255, 255, 255, 0.2);
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, 
            rgba(255, 255, 255, 0.1) 0%, 
            rgba(255, 255, 255, 0.05) 50%, 
            rgba(255, 255, 255, 0.02) 100%);
        border-radius: 16px 16px 0 0;
    }

    .logo-container {
        position: relative;
        width: 80px;
        height: 80px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .github-logo {
        z-index: 2;
        filter: drop-shadow(0 0 6px rgba(0, 255, 200, 0.6));
    }

    .github-path {
        opacity: 0;
    }

    .glow-effect {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 100%;
        height: 100%;
        background: radial-gradient(circle at center, 
            rgba(0, 255, 200, 0.1) 0%, 
            transparent 70%);
        border-radius: 16px;
        opacity: 0;
        animation: glow-pulse 2s ease-out infinite;
    }

    @keyframes glow-pulse {
        0%, 100% { opacity: 0; }
        50% { opacity: 1; }
    }
</style>

<script>
    function initializeAnimation() {
        const path = document.querySelector('.github-path') as SVGPathElement;

        if (path) {
            const pathLength = path.getTotalLength();
            
            // Set initial state
            path.style.strokeDasharray = `${pathLength} ${pathLength}`;
            path.style.strokeDashoffset = `${pathLength}`;
            
            // Start animation
            requestAnimationFrame(() => {
                // Make the path visible
                path.style.opacity = '1';
                path.style.transition = 'stroke-dashoffset 1.26s cubic-bezier(0.2, 0, 0.8, 1), opacity 0.1s ease';
                path.style.strokeDashoffset = '0';
            });
        }
    }

    function resetAnimation() {
        const path = document.querySelector('.github-path') as SVGPathElement;

        if (path) {
            const pathLength = path.getTotalLength();
            path.style.opacity = '0';
            path.style.strokeDasharray = `${pathLength} ${pathLength}`;
            path.style.strokeDashoffset = `${pathLength}`;
            path.style.transition = 'none';
        }
    }

    function setupHoverListener() {
        const wrapper = document.querySelector('.github-logo-wrapper');
        if (wrapper) {
            wrapper.addEventListener('mouseenter', () => {
                resetAnimation();
                setTimeout(initializeAnimation, 100);
            });
        }
    }

    // Handle initial page load
    window.addEventListener('load', () => {
        setTimeout(initializeAnimation, 500);
        setupHoverListener();
    });

    // Handle navigation events (for Astro)
    document.addEventListener('astro:page-load', () => {
        setTimeout(initializeAnimation, 500);
        setupHoverListener();
    });
</script> 